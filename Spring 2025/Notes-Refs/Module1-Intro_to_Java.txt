INTRO TO JAVA : Skeletons, Variables, Printing, Reading in Java

--Why Learn Java?--
  * One of the most used languages in the world.
  * Designed to build large enterprise applications.
  * Requires familiarity with using a compiler.
  * Can aid in learning other languages [because it is an object orinted language].


--3 Categories of Programming Languages--
  1. procedural - A method of programming that is executed in a step-by-step manner. This method requires the programmer to specify both what the program should do and how to execute it.
        LINK: https://www.geeksforgeeks.org/what-is-procedural-language/
        LANGUAGES: C, Fortran, BASIC

  2. objet oriented (OOP) - Object-oriented programming uses classes and objects to build software that models real-world entities.
        LINK: https://www.geeksforgeeks.org/introduction-of-object-oriented-programming/

  3. functional - Functional programming focuses on *what to solve* over *how to solve* and attempts to bind everything into mathematical functions.
        LINK: https://www.geeksforgeeks.org/functional-programming-paradigm/
        LANGUAGES: Scala, Haskell, F#


--Other Notes--
  * Most people use object oriented languages such as Java, C#, and Python.
  * Java is a compiled language, meaning that it runs through a compiler, a piece of software that looks for syntax errors, before converting the source code into a machine language and then running the code.
  * Spacing/indentations are not important in Java. The curly brackets {} are used to identify code inside of another set of code. Any spacing is a personal choice that may aid in easier readability of your code.





SKELETON
* Java requires you to place all of your code into a methoda in a class. You will always start with the code below:
                     public class ClassName {
                         public static void main(String[]) args) {
                             // your code here
                         }
                     }
* The name of the file must always match with the name of the class containing your main code.

REMINDERS
* When ending a line in Java, add a semicolon ";" to the end of that line.
* Comments:
   - Single-line comments follow 2 back slashes
                   // your code here
   - Multi-line comments look like the followiiing:
                  /*
                    your
                    code is
                    here
                  */

TYPES IN JAVA
  Primitive (8):
     * boolean - True or False values; takes up 1 bit of memory
     * byte - integer values ranging from -128 to 127; 8 bits of memory
     * short - integer values ranging from -32,768 to 32,767; 16 bits if memory
     * int (integer) - integer values ranging from -2,147,483,648 to 2,147,483,647; 32 bits of memory
     * long - -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807; 64 bits of memory
     * float - decimal values; 32 bits of memory; differentiated from doubles by including "f" at the end
     * double - decimal values; 64 bits of memory
     * char (character) - a single character that must be enclosed in single-quotes (' ')
  Complex:
     * String - An array of characters; enclosed in double quotes (" "); when a String variable is created, the 'S' must be capitalized
     * Array - 
     * ArrayList - 

DECLARAING VARIABLES
    * Sequence:    <type> <name>
                int x;   //creates a variable called "x" of type integer
                String name = "Jim";   //creates a variable called "name" of type String with the initial value, "Jim."
                float weight = 6.78f;   //creates a variable called "weight" of type float with the initial value of 6.78

PRINTING
* to print, or display output on the screen, use one of the following options:
           System.out.print();    // this option only prints out the given output
           System.out.println();  // this option prints out the given output and creates a new line
* Java automatically converts values in a print statement to String types
